package ru.sokolov.spring.chapter_1_IoC_and_DI.Les_4_5_Inversion_of_control;

public class Test1 {
    public static void main(String[] args) {
        Pet pet = new Dog();
        pet.say();
        Pet pet1 = new Cat();
        pet1.say();

        //Чтобы каждый раз не менять код, для того, чтобы услышать как наши животные произносят звуки,
        // а соответственно чтобы не было нужды в перекомпиляции кода, самым лучшим решением будет
        // вынести эти детали в отдельный файл. Он будет называться конфигурационным файлом. И делать
        // каждый раз изменения мы будем уже только в этом конфигурационном файле. А сам код мы уже
        // затрагивать не будем. Вот это наша цель. Т.е. Java читает конфиг файл и знает какое животное
        // необходимо озвучить. Такое решение предоставляет нам Spring framework. Опять-таки в конфиг
        // файле мы опишем что из себя представляют наши объекты и всё. Созданием же этих объектов
        // будет уже заниматься Spring.

        //Ответственным за создание и управление объектами является - Spring Container.
        //Это контейнер, где будут находиться созданные объекты и откуда мы сможем их получать.
        //Container будет читать наш конфиг файл и в контейнере будут создаваться те объекты,
        // которые мы опишем в конфиг файле(Dog, Cat и др.). Таким образом в нашем классе Test1
        // мы уже не будем создавать наши объекты, а будем получать их из Spring Container.



    }
}
